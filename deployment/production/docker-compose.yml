version: '3.4'

services:
  db-identity:
    image: postgres:14.2-alpine # replace with actual tag/version
    restart: always
    env_file:
      - ./secrets/db-identity.env
    environment:
      PGHOST: "localhost"
      PGPORT: "42000"
      PGDATA: "/var/lib/postgresql/data"
      POSTGRES_DB: "stasis_identity"
    volumes:
      - ./local/postgres/identity:/var/lib/postgresql/data

  db-server:
    image: postgres:14.2-alpine # replace with actual tag/version
    restart: always
    env_file:
      - ./secrets/db-server.env
    environment:
      PGHOST: "localhost"
      PGPORT: "42001"
      PGDATA: "/var/lib/postgresql/data"
      POSTGRES_DB: "stasis_server"
    volumes:
      - ./local/postgres/server:/var/lib/postgresql/data

  db-identity-exporter:
    image: prometheuscommunity/postgres-exporter
    depends_on:
      - db-identity
    restart: always
    env_file:
      - ./secrets/db-identity-exporter.env
    environment:
      DATA_SOURCE_URI: "db-identity:42000/stasis_identity?sslmode=disable"
      PG_EXPORTER_WEB_LISTEN_ADDRESS: "0.0.0.0:42002"
      PG_EXPORTER_AUTO_DISCOVER_DATABASES: "true"

  db-server-exporter:
    image: prometheuscommunity/postgres-exporter
    depends_on:
      - db-server
    restart: always
    env_file:
      - ./secrets/db-server-exporter.env
    environment:
      DATA_SOURCE_URI: "db-server:42001/stasis_server?sslmode=disable"
      PG_EXPORTER_WEB_LISTEN_ADDRESS: "0.0.0.0:42003"
      PG_EXPORTER_AUTO_DISCOVER_DATABASES: "true"

  identity:
    image: ghcr.io/sndnv/stasis/stasis-identity:0.0.1-SNAPSHOT # replace with actual tag/version
    depends_on:
      - db-identity
    restart: always
    ports:
      - '42100:42100'
    env_file:
      - ./secrets/identity.env
      - ./secrets/identity.bootstrap.env
    environment:
      STASIS_IDENTITY_LOGLEVEL: "INFO"
      STASIS_IDENTITY_REALM: "stasis.internal"
      STASIS_IDENTITY_SERVICE_API_INTERFACE: "0.0.0.0"
      STASIS_IDENTITY_SERVICE_API_PORT: "42100"
      STASIS_IDENTITY_SERVICE_INTERNAL_QUERY_TIMEOUT: "3 seconds"
      STASIS_IDENTITY_SERVICE_API_CONTEXT_PROTOCOL: "TLS"
      STASIS_IDENTITY_SERVICE_API_CONTEXT_KEYSTORE_PATH: "/opt/docker/secrets/identity.p12"
      STASIS_IDENTITY_SERVICE_API_CONTEXT_KEYSTORE_TYPE: "PKCS12"
      STASIS_IDENTITY_SERVICE_API_CONTEXT_KEYSTORE_PASSWORD: ""
      STASIS_IDENTITY_SERVICE_TELEMETRY_METRICS_INTERFACE: "0.0.0.0"
      STASIS_IDENTITY_SERVICE_TELEMETRY_METRICS_PORT: "42101"
      STASIS_IDENTITY_CODES_AUTHORIZATION_SIZE: "32"
      STASIS_IDENTITY_CODES_AUTHORIZATION_EXPIRATION: "1 minute"
      STASIS_IDENTITY_TOKENS_ACCESS_ISSUER: "identity.stasis.internal"
      STASIS_IDENTITY_TOKENS_ACCESS_EXPIRATION: "90 minutes"
      STASIS_IDENTITY_TOKENS_ACCESS_SIGNATURE_KEY_TYPE: "stored"
      STASIS_IDENTITY_TOKENS_ACCESS_SIGNATURE_KEY_STORED_PATH: "/opt/docker/secrets/identity-signature-key.jwk.json"
      STASIS_IDENTITY_TOKENS_REFRESH_ALLOWED: "true"
      STASIS_IDENTITY_TOKENS_REFRESH_SIZE: "64"
      STASIS_IDENTITY_TOKENS_REFRESH_EXPIRATION: "7 days"
      STASIS_IDENTITY_SECRETS_CLIENT_ALGORITHM: "PBKDF2WithHmacSHA512"
      STASIS_IDENTITY_SECRETS_CLIENT_ITERATIONS: "150000"
      STASIS_IDENTITY_SECRETS_CLIENT_DERIVED_KEY_SIZE: "64"
      STASIS_IDENTITY_SECRETS_CLIENT_SALT_SIZE: "64"
      STASIS_IDENTITY_SECRETS_CLIENT_AUTHENTICATION_DELAY: "500ms"
      STASIS_IDENTITY_SECRETS_RESOURCE_OWNER_ALGORITHM: "PBKDF2WithHmacSHA512"
      STASIS_IDENTITY_SECRETS_RESOURCE_OWNER_ITERATIONS: "150000"
      STASIS_IDENTITY_SECRETS_RESOURCE_OWNER_DERIVED_KEY_SIZE: "64"
      STASIS_IDENTITY_SECRETS_RESOURCE_OWNER_SALT_SIZE: "64"
      STASIS_IDENTITY_SECRETS_RESOURCE_OWNER_AUTHENTICATION_DELAY: "500ms"
      STASIS_IDENTITY_AUTHENTICATORS_OWNER_IDENTITY_CLAIM: "sub"
      STASIS_IDENTITY_AUTHENTICATORS_OWNER_TOLERANCE: "30 seconds"
      STASIS_IDENTITY_PERSISTENCE_DATABASE_PROFILE: "PostgresProfile"
      STASIS_IDENTITY_PERSISTENCE_DATABASE_URL: "jdbc:postgresql://db-identity:42000/stasis_identity"
      STASIS_IDENTITY_PERSISTENCE_DATABASE_DRIVER: "org.postgresql.Driver"
      STASIS_IDENTITY_PERSISTENCE_DATABASE_KEEP_ALIVE_CONNECTION: "true"
      STASIS_IDENTITY_BOOTSTRAP_ENABLED: "false"
      STASIS_IDENTITY_BOOTSTRAP_CONFIG: "/opt/docker/config/identity-bootstrap.conf"
      PEKKO_HTTP_SERVER_HEADER: ""
      PEKKO_HTTP_CORS_ALLOWED_ORIGINS: "" # replace with actual allowed origins
    volumes:
      - ./bootstrap/identity.conf:/opt/docker/config/identity-bootstrap.conf
      - ./secrets/identity.p12:/opt/docker/secrets/identity.p12
      - ./secrets/identity-signature-key.jwk.json:/opt/docker/secrets/identity-signature-key.jwk.json

  identity-ui:
    image: ghcr.io/sndnv/stasis/stasis-identity-ui:0.0.1-SNAPSHOT # replace with actual tag/version
    restart: always
    ports:
      - '42200:42200'
    env_file:
      - ./secrets/identity-ui.env
    environment:
      IDENTITY_UI_IDENTITY_SERVER: "https://identity.stasis.internal:42100"
      IDENTITY_UI_TOKEN_ENDPOINT: "/oauth/token"
      IDENTITY_UI_REDIRECT_URI: "https://identity.stasis.internal:42200/login/callback"
      IDENTITY_UI_SCOPES: "urn:stasis:identity:audience:manage-identity"
      IDENTITY_UI_PASSWORD_DERIVATION_ENABLED: "true"
      IDENTITY_UI_PASSWORD_DERIVATION_SECRET_SIZE: "24"
      IDENTITY_UI_PASSWORD_DERIVATION_ITERATIONS: "150000"
      NGINX_SERVER_NAME: "" # replace with actual server name
      NGINX_SERVER_PORT: "42200 ssl"
      NGINX_SERVER_SSL_CERTIFICATE: "/opt/docker/secrets/identity.cert.pem"
      NGINX_SERVER_SSL_CERTIFICATE_KEY: "/opt/docker/secrets/identity.key.pem"
      NGINX_SERVER_SSL_PROTOCOLS: "TLSv1 TLSv1.1 TLSv1.2"
      NGINX_SERVER_SSL_CIPHERS: "HIGH:!aNULL:!MD5"
      NGINX_CORS_ALLOWED_ORIGIN: "" # replace with actual allowed origins
    volumes:
      - ./secrets/identity.cert.pem:/opt/docker/secrets/identity.cert.pem
      - ./secrets/identity.key.pem:/opt/docker/secrets/identity.key.pem

  server:
    image: ghcr.io/sndnv/stasis/stasis-server:0.0.1-SNAPSHOT # replace with actual tag/version
    restart: always
    depends_on:
      - db-server
      - db-identity
      - identity
    ports:
      - '42300:42300'
      - '42301:42301'
      - '42302:42302'
    env_file:
      - ./secrets/server.env
      - ./secrets/server.bootstrap.env
    environment:
      STASIS_SERVER_LOGLEVEL: "INFO"
      STASIS_SERVER_SERVICE_INTERNAL_QUERY_TIMEOUT: "3 seconds"
      STASIS_SERVER_SERVICE_API_INTERFACE: "0.0.0.0"
      STASIS_SERVER_SERVICE_API_PORT: "42300"
      STASIS_SERVER_SERVICE_API_CONTEXT_ENABLED: "true"
      STASIS_SERVER_SERVICE_API_CONTEXT_PROTOCOL: "TLS"
      STASIS_SERVER_SERVICE_API_CONTEXT_KEYSTORE_PATH: "/opt/docker/secrets/server.p12"
      STASIS_SERVER_SERVICE_API_CONTEXT_KEYSTORE_TYPE: "PKCS12"
      STASIS_SERVER_SERVICE_API_CONTEXT_KEYSTORE_PASSWORD: ""
      STASIS_SERVER_SERVICE_CORE_INTERFACE: "0.0.0.0"
      STASIS_SERVER_SERVICE_CORE_PORT: "42301"
      STASIS_SERVER_SERVICE_CORE_CONTEXT_ENABLED: "true"
      STASIS_SERVER_SERVICE_CORE_CONTEXT_PROTOCOL: "TLS"
      STASIS_SERVER_SERVICE_CORE_CONTEXT_KEYSTORE_PATH: "/opt/docker/secrets/server.p12"
      STASIS_SERVER_SERVICE_CORE_CONTEXT_KEYSTORE_TYPE: "PKCS12"
      STASIS_SERVER_SERVICE_CORE_CONTEXT_KEYSTORE_PASSWORD: ""
      STASIS_SERVER_SERVICE_TELEMETRY_METRICS_INTERFACE: "0.0.0.0"
      STASIS_SERVER_SERVICE_TELEMETRY_METRICS_PORT: "42303"
      STASIS_SERVER_CLIENTS_CORE_REQUEST_BUFFER_SIZE: "1000"
      STASIS_SERVER_CLIENTS_CORE_CONTEXT_ENABLED: "false"
      STASIS_SERVER_CLIENTS_CORE_CONTEXT_PROTOCOL: "TLS"
      STASIS_SERVER_CLIENTS_CORE_CONTEXT_TRUSTSTORE_PATH: ""
      STASIS_SERVER_CLIENTS_CORE_CONTEXT_TRUSTSTORE_TYPE: "PKCS12"
      STASIS_SERVER_CLIENTS_CORE_CONTEXT_TRUSTSTORE_PASSWORD: ""
      STASIS_SERVER_CLIENTS_AUTHENTICATION_CONTEXT_ENABLED: "true"
      STASIS_SERVER_CLIENTS_AUTHENTICATION_CONTEXT_PROTOCOL: "TLS"
      STASIS_SERVER_CLIENTS_AUTHENTICATION_CONTEXT_TRUSTSTORE_PATH: "/opt/docker/secrets/identity.p12"
      STASIS_SERVER_CLIENTS_AUTHENTICATION_CONTEXT_TRUSTSTORE_TYPE: "PKCS12"
      STASIS_SERVER_CLIENTS_AUTHENTICATION_CONTEXT_TRUSTSTORE_PASSWORD: ""
      STASIS_SERVER_AUTHENTICATORS_USERS_ISSUER: "identity.stasis.internal"
      STASIS_SERVER_AUTHENTICATORS_USERS_AUDIENCE: "stasis-server-api"
      STASIS_SERVER_AUTHENTICATORS_USERS_IDENTITY_CLAIM: "sub"
      STASIS_SERVER_AUTHENTICATORS_USERS_JWKS_ENDPOINT: "https://identity:42100/jwks/jwks.json"
      STASIS_SERVER_AUTHENTICATORS_USERS_REFRESH_INTERVAL: "90 minutes"
      STASIS_SERVER_AUTHENTICATORS_USERS_REFRESH_RETRY_INTERVAL: "3 seconds"
      STASIS_SERVER_AUTHENTICATORS_USERS_TOLERANCE: "30 seconds"
      STASIS_SERVER_AUTHENTICATORS_NODES_ISSUER: "identity.stasis.internal"
      STASIS_SERVER_AUTHENTICATORS_NODES_IDENTITY_CLAIM: "sub"
      STASIS_SERVER_AUTHENTICATORS_NODES_JWKS_ENDPOINT: "https://identity:42100/jwks/jwks.json"
      STASIS_SERVER_AUTHENTICATORS_NODES_REFRESH_INTERVAL: "90 minutes"
      STASIS_SERVER_AUTHENTICATORS_NODES_REFRESH_RETRY_INTERVAL: "3 seconds"
      STASIS_SERVER_AUTHENTICATORS_NODES_TOLERANCE: "30 seconds"
      STASIS_SERVER_AUTHENTICATORS_INSTANCE_TOKEN_ENDPOINT: "https://identity:42100/oauth/token"
      STASIS_SERVER_AUTHENTICATORS_INSTANCE_TOLERANCE: "30 seconds"
      STASIS_SERVER_AUTHENTICATORS_INSTANCE_USE_QUERY_STRING: "false"
      STASIS_SERVER_CREDENTIALS_MANAGERS_IDENTITY_URL: "https://identity:42100"
      STASIS_SERVER_CREDENTIALS_MANAGERS_IDENTITY_MANAGEMENT_SCOPE: "urn:stasis:identity:audience:manage-identity"
      STASIS_SERVER_CREDENTIALS_MANAGERS_IDENTITY_CONTEXT_ENABLED: "true"
      STASIS_SERVER_CREDENTIALS_MANAGERS_IDENTITY_CONTEXT_PROTOCOL: "TLS"
      STASIS_SERVER_CREDENTIALS_MANAGERS_IDENTITY_CONTEXT_TRUSTSTORE_PATH: "/opt/docker/secrets/identity.p12"
      STASIS_SERVER_CREDENTIALS_MANAGERS_IDENTITY_CONTEXT_TRUSTSTORE_TYPE: "PKCS12"
      STASIS_SERVER_CREDENTIALS_MANAGERS_IDENTITY_CONTEXT_TRUSTSTORE_PASSWORD: ""
      STASIS_SERVER_PERSISTENCE_DATABASE_PROFILE: "PostgresProfile"
      STASIS_SERVER_PERSISTENCE_DATABASE_URL: "jdbc:postgresql://db-server:42001/stasis_server"
      STASIS_SERVER_PERSISTENCE_DATABASE_DRIVER: "org.postgresql.Driver"
      STASIS_SERVER_PERSISTENCE_DATABASE_KEEP_ALIVE_CONNECTION: "true"
      STASIS_SERVER_PERSISTENCE_USERS_SALT_SIZE: "16"
      STASIS_SERVER_PERSISTENCE_RESERVATIONS_EXPIRATION: "1 minute"
      STASIS_SERVER_PERSISTENCE_NODES_CACHING_ENABLED: "true"
      STASIS_SERVER_PERSISTENCE_STAGING_ENABLED: "false"
      STASIS_SERVER_PERSISTENCE_STAGING_DESTAGING_DELAY: "1 minute"
      STASIS_SERVER_PERSISTENCE_STAGING_STORE_TYPE: "file"
      STASIS_SERVER_PERSISTENCE_STAGING_STORE_FILE_PARENT_DIRECTORY: "/opt/server/staging"
      STASIS_SERVER_BOOTSTRAP_API_ENABLED: "true"
      STASIS_SERVER_BOOTSTRAP_API_INTERFACE: "0.0.0.0"
      STASIS_SERVER_BOOTSTRAP_API_PORT: "42302"
      STASIS_SERVER_BOOTSTRAP_DEVICES_CODE_SIZE: "9"
      STASIS_SERVER_BOOTSTRAP_DEVICES_CODE_EXPIRATION: "5 minutes"
      STASIS_SERVER_BOOTSTRAP_DEVICES_SECRET_SIZE: "24"
      STASIS_SERVER_BOOTSTRAP_DEVICES_CREDENTIALS_MANAGER_IDENTITY_CLIENT_REDIRECT_URI: "https://localhost:9999"
      STASIS_SERVER_BOOTSTRAP_DEVICES_CREDENTIALS_MANAGER_IDENTITY_CLIENT_TOKEN_EXPIRATION: "90  minutes"
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_SERVER_API_URL: "https://server:42300"
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_SERVER_API_CONTEXT_ENABLED: "true"
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_SERVER_CORE_ADDRESS: "https://server:42301"
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_SERVER_CORE_CONTEXT_ENABLED: "true"
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_ADDITIONAL_CONFIG: ""
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_SECRETS_DERIVATION_ENCRYPTION_SECRET_SIZE: "32"
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_SECRETS_DERIVATION_ENCRYPTION_ITERATIONS: "150000"
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_SECRETS_DERIVATION_AUTHENTICATION_ENABLED: "true"
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_SECRETS_DERIVATION_AUTHENTICATION_SECRET_SIZE: "24"
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_SECRETS_DERIVATION_AUTHENTICATION_ITERATIONS: "150000"
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_SECRETS_ENCRYPTION_FILE_KEY_SIZE: "16"
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_SECRETS_ENCRYPTION_METADATA_KEY_SIZE: "16"
      STASIS_SERVER_BOOTSTRAP_DEVICES_PARAMETERS_SECRETS_ENCRYPTION_DEVICE_SECRET_KEY_SIZE: "16"
      STASIS_SERVER_SERVICE_BOOTSTRAP_ENABLED: "false"
      STASIS_SERVER_SERVICE_BOOTSTRAP_CONFIG: "/opt/docker/config/server-bootstrap.conf"
      PEKKO_HTTP_SERVER_HEADER: ""
      PEKKO_HTTP_SERVER_PARSING_MAX_CONTENT_LENGTH: "4G"
      PEKKO_HTTP_CORS_ALLOWED_ORIGINS: "" # replace with actual allowed origins
    volumes:
      - ./bootstrap/server.conf:/opt/docker/config/server-bootstrap.conf
      - ./local/server:/opt/server
      - ./secrets/server.p12:/opt/docker/secrets/server.p12
      - ./secrets/identity.p12:/opt/docker/secrets/identity.p12

  server-ui:
    image: ghcr.io/sndnv/stasis/stasis-server-ui:0.0.1-SNAPSHOT # replace with actual tag/version
    restart: always
    ports:
      - '42600:42600'
    env_file:
      - ./secrets/server-ui.env
    environment:
      SERVER_UI_SERVER_API: "https://server.stasis.internal:42300"
      SERVER_UI_BOOTSTRAP_API: "https://server.stasis.internal:42302"
      SERVER_UI_AUTHORIZATION_ENDPOINT: "https://identity.stasis.internal:42200/login/authorize"
      SERVER_UI_TOKEN_ENDPOINT: "https://identity.stasis.internal:42100/oauth/token"
      SERVER_UI_REDIRECT_URI: "https://server.stasis.internal:42600/login/callback"
      SERVER_UI_SCOPES: "urn:stasis:identity:audience:stasis-server-api"
      SERVER_UI_PASSWORD_DERIVATION_ENABLED: "true"
      SERVER_UI_PASSWORD_DERIVATION_SECRET_SIZE: "16"
      SERVER_UI_PASSWORD_DERIVATION_ITERATIONS: "150000"
      NGINX_SERVER_NAME: "" # replace with actual server name
      NGINX_SERVER_PORT: "42600 ssl"
      NGINX_SERVER_SSL_CERTIFICATE: "/opt/docker/secrets/server.cert.pem"
      NGINX_SERVER_SSL_CERTIFICATE_KEY: "/opt/docker/secrets/server.key.pem"
      NGINX_SERVER_SSL_PROTOCOLS: "TLSv1 TLSv1.1 TLSv1.2"
      NGINX_SERVER_SSL_CIPHERS: "HIGH:!aNULL:!MD5"
      NGINX_CORS_ALLOWED_ORIGIN: "" # replace with actual allowed origins
    volumes:
      - ./secrets/server.cert.pem:/opt/docker/secrets/server.cert.pem
      - ./secrets/server.key.pem:/opt/docker/secrets/server.key.pem

  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - "42400:9090"
    volumes:
      - ./telemetry/prometheus:/etc/prometheus
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - "42500:3000"
    volumes:
      - ./telemetry/grafana:/etc/grafana/provisioning
      - ../grafana/dashboards/identity:/etc/grafana/provisioning/dashboards/identity
      - ../grafana/dashboards/server:/etc/grafana/provisioning/dashboards/server
      - ../grafana/dashboards/jvm:/etc/grafana/provisioning/dashboards/jvm
      - ../grafana/dashboards/postgresql:/etc/grafana/provisioning/dashboards/postgresql

volumes:
  prometheus_data:
