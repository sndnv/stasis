name: Stasis Publish

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  scala:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt

      - name: Build and publish identity image
        run: |
          sbt identity/docker:publish

      - name: Build and publish server image
        run: |
          sbt server/docker:publish

      - name: Build client artifacts
        run: |
          sbt "project client" universal:packageBin
          mv client/target/universal/stasis-client-*.zip client/target/universal/stasis-client-${{ github.ref_name }}.zip

      - name: Upload client artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client
          path: client/target/universal/stasis-client-${{ github.ref_name }}.zip
          if-no-files-found: error
          retention-days: 1

  python:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build client-cli artifacts
        run: |
          cd client-cli
          python setup.py bdist --format=zip
          mv dist/stasis-client-cli-*.zip dist/stasis-client-cli-${{ github.ref_name }}.zip

      - name: Upload client-cli artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client-cli
          path: client-cli/dist/stasis-client-cli-${{ github.ref_name }}.zip
          if-no-files-found: error
          retention-days: 1

  flutter-docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Build and publish identity-ui
        run: |
          cd identity-ui
          IDENTITY_UI_IMAGE=$(./deployment/production/build.py | tail -1)
          docker push $IDENTITY_UI_IMAGE

      - name: Build and publish server-ui
        run: |
          cd server-ui
          SERVER_UI_IMAGE=$(./deployment/production/build.py | tail -1)
          docker push $SERVER_UI_IMAGE

  flutter-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Setup Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build client-ui Linux artifacts
        run: |
          sudo apt update -y
          sudo apt install -y ninja-build libgtk-3-dev
          cd client-ui
          flutter pub get
          dart run build_runner build
          flutter build linux

      - name: Build client-ui AppImage
        run: |
          pip install git+https://github.com/AppImageCrafters/appimage-builder.git@42d32f11496de43a9f6a9ada7882a11296e357ca
          cd client-ui
          appimage-builder --skip-test
          mv *.AppImage stasis-client-ui-linux-${{ github.ref_name }}.AppImage

      - name: Upload client-ui Linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client-ui-linux
          path: client-ui/stasis-client-ui-linux-${{ github.ref_name }}.AppImage
          if-no-files-found: error
          retention-days: 1

  flutter-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - name: Build client-ui MacOS artifacts
        run: |
          brew install create-dmg
          cd client-ui
          flutter pub get
          dart run build_runner build
          flutter build macos
          create-dmg \
            --volname "stasis" \
            --window-size 800 400 \
            --app-drop-link 600 200 \
            "stasis-client-ui-macos-${{ github.ref_name }}.dmg" "build/macos/Build/Products/Release/stasis.app/"

      - name: Upload client-ui MacOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client-ui-macos
          path: client-ui/stasis-client-ui-macos-${{ github.ref_name }}.dmg
          if-no-files-found: error
          retention-days: 1

  android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'signing.jks'
          fileDir: './client-android/app/secrets/'
          encodedString: ${{ secrets.ANDROID_SIGNING_KEYSTORE }}

      - name: Build client-android artifacts
        env:
          ANDROID_SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          ANDROID_SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
          ANDROID_SIGNING_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_SIGNING_KEYSTORE_PASSWORD }}
        run: |
          cd client-android
          ./gradlew :app:assembleRelease -x test
          mv app/build/outputs/apk/release/*.apk app/build/outputs/apk/release/stasis-client-android-${{ github.ref_name }}.apk

      - name: Upload client-android artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client-android
          path: client-android/app/build/outputs/apk/release/stasis-client-android-${{ github.ref_name }}.apk
          if-no-files-found: error
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs:
      - scala
      - python
      - flutter-docker
      - flutter-linux
      - flutter-macos
      - android
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: |
            client/stasis-client-${{ github.ref_name }}.zip
            client-cli/stasis-client-cli-${{ github.ref_name }}.zip
            client-ui-linux/stasis-client-ui-linux-${{ github.ref_name }}.AppImage
            client-ui-macos/stasis-client-ui-macos-${{ github.ref_name }}.dmg
            client-android/stasis-client-android-${{ github.ref_name }}.apk
