akka {
  loglevel = "DEBUG"

  test {
    timefactor = 5.0
  }
}

stasis {
  identity {
    realm = "test"

    service {
      interface = "localhost"
      port = 19999
      internal-query-timeout = 3 seconds
      context {
        protocol = "TLS"
        keystore {
          path = "./core/src/test/resources/certs/localhost.p12"
          type = "PKCS12"
          password = ""
        }
      }
    }

    persistence {
      database {
        url = "jdbc:h2:mem:identity-integration"
        driver = "org.h2.Driver"
        user = ""
        password = ""
        keep-alive-connection = true
      }
    }

    bootstrap {
      enabled = true
      config = "bootstrap-integration.conf"
    }
  }

  test {
    identity {
      service {
        context {
          protocol = "TLS"
          keystore {
            path = "./core/src/test/resources/certs/localhost.p12"
            type = "PKCS12"
            password = ""
          }
        }
      }

      persistence {
        database {
          url = "jdbc:h2:mem:identity-unit"
          driver = "org.h2.Driver"
          user = ""
          password = ""
          keep-alive-connection = true
        }
      }

      bootstrap-enabled {
        enabled = true
        config = "bootstrap-unit.conf"
      }

      bootstrap-disabled {
        enabled = false
        config = "bootstrap-unit.conf"
      }

      secrets {
        client {
          algorithm = "clients-some-algorithm"
          iterations = 1
          derived-key-size = 2
          salt-size = 3
          authentication-delay = 4ms
        }
        resource-owner {
          algorithm = "owners-some-algorithm"
          iterations = 5
          derived-key-size = 6
          salt-size = 7
          authentication-delay = 8ms
        }
      }

      signature-key-generated-oct {
        type = "generated"
        generated {
          type = "secret"
          secret {
            id = "stasis-identity-oct-0"
            algorithm = "HS256"
          }
        }
      }

      signature-key-generated-rsa {
        type = "generated"
        generated {
          type = "rsa"
          rsa {
            id = "stasis-identity-rsa-0"
            size = 1024
            algorithm = "RS256"
          }
        }
      }

      signature-key-generated-ec {
        type = "generated"
        generated {
          type = "ec"
          ec {
            id = "stasis-identity-ec-0"
            algorithm = "ES256"
          }
        }
      }

      signature-key-stored-oct {
        type = "stored"
        stored {
          path = "./identity/src/test/resources/keys/oct.jwk.json"
        }
      }

      signature-key-stored-rsa {
        type = "stored"
        stored {
          path = "./identity/src/test/resources/keys/rsa.jwk.json"
        }
      }

      signature-key-stored-ec {
        type = "stored"
        stored {
          path = "./identity/src/test/resources/keys/ec.jwk.json"
        }
      }
    }
  }
}