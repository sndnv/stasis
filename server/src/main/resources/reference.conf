stasis {
  server {
    service {
      interface = "localhost"
      interface = ${?SERVER_SERVICE_INTERFACE}
      port = 9090
      port = ${?SERVER_SERVICE_PORT}
      internal-query-timeout = 3 seconds
      internal-query-timeout = ${?SERVER_SERVICE_INTERNAL_QUERY_TIMEOUT}
      context {
        protocol = "TLS" # one of [TLS, TLSv1, TLSv1.1, TLSv1.2]
        protocol = ${?SERVER_SERVICE_CONTEXT_PROTOCOL}
        keystore {
          path = ""
          path = ${?SERVER_SERVICE_CONTEXT_KEYSTORE_PATH}
          type = "PKCS12" # one of [PKCS12, JKS]
          type = ${?SERVER_SERVICE_CONTEXT_KEYSTORE_TYPE}
          password = ""
          password = ${?SERVER_SERVICE_CONTEXT_KEYSTORE_PASSWORD}
        }
      }
    }

    authenticators {
      user {
        issuer = "stasis-identity" // service issuing JWTs
        issuer = ${?SERVER_AUTHENTICATORS_USER_ISSUER}
        audience = "stasis-server" // server (this service)
        audience = ${?SERVER_AUTHENTICATORS_USER_AUDIENCE}
        jwks-endpoint = "http://localhost:9090/jwks/jwks.json"
        jwks-endpoint = ${?SERVER_AUTHENTICATORS_USER_JWKS_ENDPOINT}
        refresh-interval = 90 minutes
        refresh-interval = ${?SERVER_AUTHENTICATORS_USER_REFRESH_INTERVAL}
        expiration-tolerance = 30 seconds
        expiration-tolerance = ${?SERVER_AUTHENTICATORS_USER_TOLERANCE}
      }
    }

    persistence {
      database {
        url = "jdbc:h2:mem:server"
        url = ${?SERVER_PERSISTENCE_DATABASE_URL}
        driver = "org.h2.Driver"
        driver = ${?SERVER_PERSISTENCE_DATABASE_DRIVER}
        user = ""
        user = ${?SERVER_PERSISTENCE_DATABASE_USER}
        password = ""
        password = ${?SERVER_PERSISTENCE_DATABASE_PASSWORD}
        keep-alive-connection = true
        keep-alive-connection = ${?SERVER_PERSISTENCE_KEEP_ALIVE_CONNECTION}
      }
    }

    bootstrap {
      enabled = false
      enabled = ${?SERVER_BOOTSTRAP_ENABLED}
      config = "" # bootstrap config file
      config = ${?SERVER_BOOTSTRAP_CONFIG}
    }
  }
}

akka {
  loglevel = "INFO"
  loglevel = ${?STASIS_LOGLEVEL}

  http.server.server-header = ""
}
