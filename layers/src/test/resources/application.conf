pekko {
  loglevel = "DEBUG"
  loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
  logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"

  test {
    timefactor = 15.0
  }
}

stasis {
  test {
    layers {
      security {
        tls {
          context-server {
            type = "server"
            protocol = "TLS"

            keystore {
              path = "./core/src/test/resources/certs/localhost.p12"
              type = "PKCS12"
              password = ""
            }
          }

          context-server-jks {
            type = "server"
            protocol = "TLS"

            keystore {
              path = "./core/src/test/resources/certs/localhost.jks"
              type = "JKS"
              password = "changeit"
            }
          }

          context-client {
            type = "client"
            protocol = "TLS"

            truststore {
              path = "./core/src/test/resources/certs/localhost.p12"
              type = "PKCS12"
              password = ""
            }
          }

          context-enabled {
            enabled = true
            protocol = "TLS"
            truststore {
              path = "./core/src/test/resources/certs/localhost.p12"
              type = "PKCS12"
              password = ""
            }
          }

          context-disabled {
            enabled = false
            type = "client"
            protocol = "TLS"

            truststore {
              path = "./core/src/test/resources/certs/localhost.p12"
              type = "PKCS12"
              password = ""
            }
          }

          context-missing {
            type = "client"
            protocol = "TLS"

            truststore {
              path = "./core/src/test/resources/certs/missing.p12"
              type = "JKS"
              password = ""
            }
          }
        }
      }

      service {
        bootstrap-off {
          mode = off
          config = ""
        }

        bootstrap-init {
          mode = init
          config = "bootstrap.conf"
        }

        bootstrap-init-and-start {
          mode = init-and-start
          config = "bootstrap.conf"
        }
        bootstrap-drop {
          mode = drop
          config = ""
        }

        bootstrap-init-invalid {
          mode = init
          config = ""
        }

        bootstrap-init-and-start-invalid {
          mode = init-and-start
          config = ""
        }
      }
    }
  }
}
