pekko {
  loglevel = "DEBUG"
  loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
  logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"

  persistence {
    state.plugin = "stasis.snapshot-store.local"
  }

  http.server.preview.enable-http2 = on
  grpc.client."*".backend = "pekko-http"

  test {
    timefactor = 15.0
  }
}

stasis {
  test {
    core {
      security {
        tls {
          context-server {
            type = "server"
            protocol = "TLS"

            keystore {
              path = "./core/src/test/resources/certs/localhost.p12"
              type = "PKCS12"
              password = ""
            }
          }

          context-server-jks {
            type = "server"
            protocol = "TLS"

            keystore {
              path = "./core/src/test/resources/certs/localhost.jks"
              type = "JKS"
              password = "changeit"
            }
          }

          context-client {
            type = "client"
            protocol = "TLS"

            truststore {
              path = "./core/src/test/resources/certs/localhost.p12"
              type = "PKCS12"
              password = ""
            }
          }

          context-disabled {
            enabled = false
            type = "client"
            protocol = "TLS"

            truststore {
              path = "./core/src/test/resources/certs/localhost.p12"
              type = "PKCS12"
              password = ""
            }
          }

          context-missing {
            type = "client"
            protocol = "TLS"

            truststore {
              path = "./core/src/test/resources/certs/missing.p12"
              type = "JKS"
              password = ""
            }
          }
        }
      }

      persistence {
        crate-store-memory {
          type = "memory"
          memory {
            max-size = 10000
            max-chunk-size = 2000
            name = "test-memory-store"
          }
        }

        crate-store-container {
          type = "container"
          container {
            path = "target/some-container"
            max-chunk-size = 100
            max-chunks = 10
          }
        }

        crate-store-file {
          type = "file"
          file {
            parent-directory = "target/some-directory"
          }
        }
      }
    }
  }
}
